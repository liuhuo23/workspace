services:
  nginx:
    # image: nginx:alpine
    image: nginx-custom:v0.1
    ports:
      - "80:80"
      - "443:443"
    networks:
      - space
    volumes:
      - ${NGINX_CONF_PATH}:/usr/local/openresty/nginx/conf:ro
      - ${NGINX_DATA_PATH}:/usr/share/nginx:rw
      - ${NGINX_LOG_PATH}:/var/log/nginx:rw
  moontv-core:
    image: ghcr.io/senshinya/moontv:sha-a5a4e9f
    container_name: moontv
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - USERNAME=${MOONTV_USERNAME}
      - PASSWORD=${MOONTV_PASSWORD}
      - NEXT_PUBLIC_STORAGE_TYPE=redis
      - REDIS_URL=redis://redis:6379
      - NEXT_PUBLIC_ENABLE_REGISTER=true
    networks:
      - space
    depends_on:
      - redis
      # 如需自定义配置，可挂载文件
      # volumes:
      # - ${MOONTV_CONFIG_PATH}:/app:rw
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: default
    volumes:
      - ${MYSQL_DATA_PATH}:/var/lib/mysql
      - ${MYSQL_CONF_PATH}:/etc/mysql/conf.d:ro
    ports:
      - "3306:3306"
    networks:
      - space

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - ${REDIS_CONF_PATH}:/usr/local/etc/redis/:ro
      - ${REDIS_DATA_PATH}:/data
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    networks:
      - space

  rabbitmq:
    image: rabbitmq:management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ${RABBITMQ_DATA_PATH}:/var/lib/rabbitmq
      - ${RABBITMQ_CONF_PATH}:/etc/rabbitmq:ro
    networks:
      - space
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - ${MONGODB_DATA_PATH}:/data/db
    networks:
      - space

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ${ES_DATA_PATH}:/usr/share/elasticsearch/data
    networks:
      - space
  webdav:
    image: hacdias/webdav:latest
    container_name: webdav
    restart: always
    ports:
      - "8088:8088"
    volumes:
      - ${WEBDAV_DATA_PATH}:/data
      - ${WEBDAV_CONFIG_PATH}:/config
    command: [ "--config", "/config/config.yaml" ]
    networks:
      - space

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "8123:8123" # HTTP接口
      - "9000:9000" # Native接口
      - "9009:9009" # TCP接口
    environment:
      - CLICKHOUSE_DB=default
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1 # 启用 RBAC（用户/角色管理）
    volumes:
      - ${CLICKHOUSE_DATA_PATH}:/var/lib/clickhouse
      - ./logs/clickhouse_logs:/var/log/clickhouse-server:rw
    networks:
      - space

networks:
  space:
    driver: bridge
